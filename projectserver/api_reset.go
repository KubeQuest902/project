/*
 * Sample project for KubeQuest
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package projectserver

import (
	"encoding/json"
	"net/http"

	models "github.com/KubeQuest902/project/models"
	"github.com/mediocregopher/radix/v3"
)

func ResetCounter(w http.ResponseWriter, r *http.Request) {
	for _, a := range Animals {
		err := RedisPool.Do(radix.FlatCmd(nil, "SET", "counter:"+a, 0))
		if err != nil {
			w.Header().Set("Content-Type", "application/json")
			w.WriteHeader(http.StatusInternalServerError)
			writeStandardResponse(r, w, "Error setting counter")
			return
		}
	}

	var dogCnt, catCnt int64
	RedisPool.Do(radix.Cmd(&dogCnt, "GET", "counter:dog"))
	RedisPool.Do(radix.Cmd(&catCnt, "GET", "counter:cat"))

	currentCounts := map[string]int64{
		"dog": dogCnt,
		"cat": catCnt,
	}
	BroadcastUpdates(currentCounts)

	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)
	response, _ := json.Marshal(&models.Response{
		Message: "Counter has been reset",
	})
	w.Write(response)
}
